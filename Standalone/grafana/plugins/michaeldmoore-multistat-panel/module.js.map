{"version":3,"sources":["../src/module.js"],"names":["isNumber","n","isNaN","parseFloat","isFinite","MetricsPanelCtrl","$","_","moment","d3","getTemplateSrv","PanelEvents","templateSrv","MultistatPanelCtrl","$scope","$injector","panelDefaults","timeFrom","timeShift","BarPadding","MultiBarPadding","BaseLineColor","BaseLineWidth","BaseLineValue","DateTimeColName","DateFormat","TooltipDateFormat","FlashHighLimitBar","FlashLowLimitBar","HighAxisColor","HighAxisWidth","HighBarColor","RecolorColName","HighLimitBarColor","HighLimitBarFlashColor","HighLimitBarFlashTimeout","HighLimitLineColor","HighLimitValue","HighLmitLineWidth","HighSideMargin","Horizontal","LabelColName","LabelNameFilter","LabelColor","OutOfRangeLabelColor","GroupLabelColor","LabelFontSize","GroupRenamingRules","GroupLabelFontSize","GroupGap","VGroupGap","LabelRenamingRules","LabelMargin","Legend","Links","LowAxisColor","LowAxisWidth","LowBarColor","LowLimitBarColor","LowLimitBarFlashColor","LowLimitBarFlashTimeout","LowLimitLineColor","LowLimitValue","LowLmitLineWidth","LowSideMargin","MaxLineColor","MaxLineWidth","MaxLineValue","MinLineColor","MinLineWidth","MinLineValue","RecolorHighLimitBar","RecolorLowLimitBar","RecolorRules","ShowBaseLine","ShowDate","Aggregate","ShowHighLimitLine","ShowLabels","ShowGroupLabels","ShowLeftAxis","ShowLowLimitLine","ShowMaxLine","ShowMinLine","ShowRightAxis","ShowValues","SortColName","SortDirection","TZOffsetHours","ToolTipType","ToolTipFontSize","ValueColName","Values","ValueDecimals","ValueColor","ValueFontSize","OddRowColor","EvenRowColor","OutlineColor","GroupSortString","GroupCols","GroupNameFilter","ScaleFactor","ValuePosition","LableAngle","ShowBars","ShowLines","LineWidth","LineColor","DotSize","DotColor","CurveType","defaults","panel","length","Name","Selected","dashboardVariables","getVariables","forEach","v","current","push","name","value","console","log","JSON","stringify","events","on","dataReceived","onDataReceived","bind","dataError","onDataError","render","onRender","dataSnapshotLoad","onDataSnapshotLoad","editModeInitialized","onInitEditMode","className","id","obj","names","shift","updateNamedValue","Number","snapshotData","err","seriesList","data","displayStatusMessage","status","statusText","metricNames","sortDirections","aggregations","fontSizes","valuePositions","curveTypes","matchTypes","tooltipTypes","addEditorTab","cols","rows","columns","i","text","cols0","concat","letters","split","color","Math","floor","random","hexcolor","match","exec","r","parseInt","g","b","brightness","contrastingColor","r1","g1","b1","ctrl","randomColor","index","up","splice","dateTimeCol","$title","elem","closest","find","$maxDate","append","children","last","maxDate","dd","add","toUpperCase","fromNow","show","format","hide","msg","html","rules","newName","rule","enabled","regex","RegExp","from","replaceAll","to","labelCol","sortCol","groupCol","recolorCol","range","timeSrv","timeRangeForUrl","colName","GroupColName","Value","Col","SelectedValues","filter","renamedRows","map","row","renamedRow","parsedDateTime","_isValid","timeStamp","unix","utc","processRenamingRules","groupedLabelFunc","matchingRows","label","oo","nest","key","rollup","d","entries","x","Object","values","assign","sum","Array","mean","valueCol","max","min","groupNameOffset","replace","groupedRows","regexGroupRows","matchingGroups","groupName","groupSortString","sort","a","aPos","search","bPos","localeCompare","$container","svg","select","attr","$legend","legendValues","deselectedClassName","css","getContrastingColor","click","window","event","ctrlKey","CTRL","$apply","h","height","w","width","buildDateHtml","labelMargin","lowSideMargin","highSideMargin","selectAll","interrupt","barPadding","multiBarPadding","baseLineValue","minLineValue","maxLineValue","highLimitValue","recolorHighLimitBar","lowLimitValue","recolorLowLimitBar","flashHighLimitBar","flashLowLimitBar","tooltipType","tooltipFontSize","panelID","tooltipDivID","minValue","col","val","maxValue","remove","sortData","sortDirection","ascending","y","xx","yy","translateValues","s","s1","re","j","dv","getTooltipContent","isArray","cc","toFixed","l","url","newtab","isInTooltip","$panel","$panelContent","panelContent","tooltipShow","parent","style","tooltipDiv","tooltipHtml","classed","tooltipHide","$tooltipDiv","tooltipWidth","tooltipHeight","minTop","mouseCoordinates","mouse","node","Left","Top","panelWidth","panelHeight","transition","duration","cancel","scaleAndClipValue","getBarColor","valueDef","recolorString","recolorRule","pattern","matchType","test","indexOf","Option","getValueColor","barColor","valueColor","plotGroupHorizontal","numRows","left","hh","dh","labels","toString","substr","labelScale","scaleBand","domain","rangeRound","paddingInner","paddingOuter","stripedata","stripeScale","oddeven","enter","step","maxValueWidth","gap","bandwidth","each","thisWidth","getComputedTextLength","maxLabelWidth","labelAngle","minvalue","maxvalue","bbox","getBBox","sin","PI","c","cos","abs","valueScale","scaleLinear","nice","vLine","strokeWidth","HighLimitLineWidth","LowLimitLineWidth","bw","curveFunc","curveLinear","curveMonotoneY","curveCardinal","curveCatmullRom","lineFunction","line","curve","points","ggHighSide","call","axisTop","ggLowSide","axisBottom","gcols","dw","pointsPerRow","rr","u","totalPoints","rowOverheadHeight","rowHeight","ceil","nn","ii","plotGroupVertical","g2","maxValueHeight","thisHeight","maxLabelHeight","hLine","curveMonotoneX","axisLeft","tickSizeInner","tickSizeOuter","ticks","axisRight","pointsPerCol","colOverheadWidth","colWidth","ww","pulseHigh","highFlashRects","_groups","highRepeat","active","pulseLow","lowFlashRects","lowRepeat","renderingCompleted","refresh","scope","attrs","panelContentElem","templateUrl"],"mappings":"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","file":"module.js","sourcesContent":["/*jshint esversion: 6 */\n/*jshint -W087 */\n/*jshint -W014 */\nimport { MetricsPanelCtrl } from \"app/plugins/sdk\";\nimport $ from \"jquery\";\nimport \"jquery.flot\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport \"./css/multistat-panel.css!\";\nimport * as d3 from \"d3\";\nimport { getTemplateSrv } from '@grafana/runtime';\nimport { PanelEvents } from \"@grafana/data\";\n\nconst templateSrv = getTemplateSrv();\n\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\n\nclass MultistatPanelCtrl extends MetricsPanelCtrl {\n  /** @ngInject */\n  constructor($scope, $injector) {\n    super($scope, $injector);\n\n    var panelDefaults = {\n      timeFrom: null,\n      timeShift: null,\n      BarPadding: 10,\n      MultiBarPadding: 10,\n      BaseLineColor: \"#ff0000\",\n      BaseLineWidth: 1,\n      BaseLineValue: null,\n      DateTimeColName: \"date\",\n      DateFormat: \"YYYY-MM-DD HH:mm:ss\",\n      TooltipDateFormat: \"YYYY-MM-DD HH:mm:ss\",\n      FlashHighLimitBar: false,\n      FlashLowLimitBar: false,\n      HighAxisColor: \"#ffffff\",\n      HighAxisWidth: 1,\n      HighBarColor: \"rgb(120, 128, 0)\",\n      RecolorColName: null,\n      HighLimitBarColor: \"#ff0000\",\n      HighLimitBarFlashColor: \"#ffa500\",\n      HighLimitBarFlashTimeout: 1000,\n      HighLimitLineColor: \"#ff0000\",\n      HighLimitValue: null,\n      HighLmitLineWidth: 1,\n      HighSideMargin: 22,\n      Horizontal: false,\n      LabelColName: \"\",\n      LabelNameFilter: \"\",\n      LabelColor: \"#ffffff\",\n      OutOfRangeLabelColor: \"#ffffff\",\n      GroupLabelColor: \"#ffffff\",\n      LabelFontSize: \"100%\",\n      GroupRenamingRules: [],\n      GroupLabelFontSize: \"200%\",\n      GroupGap: 5,\n      VGroupGap: 5,\n      LabelRenamingRules: [],\n      LabelMargin: null,\n      Legend: false,\n      Links: [],\n      LowAxisColor: \"#ffffff\",\n      LowAxisWidth: 1,\n      LowBarColor: \"teal\",\n      LowLimitBarColor: \"#ff0000\",\n      LowLimitBarFlashColor: \"#ffa500\",\n      LowLimitBarFlashTimeout: 200,\n      LowLimitLineColor: \"#ff0000\",\n      LowLimitValue: null,\n      LowLmitLineWidth: 1,\n      LowSideMargin: 22,\n      MaxLineColor: \"rgb(74, 232, 12)\",\n      MaxLineWidth: 1,\n      MaxLineValue: null,\n      MinLineColor: \"#ff0000\",\n      MinLineWidth: 1,\n      MinLineValue: null,\n      RecolorHighLimitBar: false,\n      RecolorLowLimitBar: false,\n      RecolorRules: [],\n      ShowBaseLine: false,\n      ShowDate: false,\n      Aggregate: \"last\",\n      ShowHighLimitLine: false,\n      ShowLabels: true,\n      ShowGroupLabels: true,\n      ShowLeftAxis: true,\n      ShowLowLimitLine: false,\n      ShowMaxLine: false,\n      ShowMinLine: false,\n      ShowRightAxis: true,\n      ShowValues: true,\n      SortColName: \"value\",\n      SortDirection: \"ascending\",\n      TZOffsetHours: 0,\n      ToolTipType: \"\",\n      ToolTipFontSize: \"100%\",\n      ValueColName: \"\",\n      Values: [],\n      ValueDecimals: 2,\n      ValueColor: \"#ffffff\",\n      ValueFontSize: \"100%\",\n      OddRowColor: \"rgba(33, 33, 34, 0.92)\",\n      EvenRowColor: \"rgba(61, 61, 64, 0.78)\",\n      OutlineColor: \"rgba(245, 255, 0, 0.1)\",\n      GroupSortString: \"\",\n      GroupCols: 0,\n      GroupNameFilter: \"\",\n      ScaleFactor: 1,\n      ValuePosition: \"top\",\n      LableAngle: 0,\n      ShowBars: true,\n      ShowLines: false,\n      LineWidth: 5,\n      LineColor: \"blue\",\n      DotSize: 10,\n      DotColor: \"white\",\n      CurveType: \"Monotone\",\n    };\n\n    _.defaults(this.panel, panelDefaults);\n\n    // Migrate old configurations from single value column to array of value columns\n    if (this.panel.Values.length === 0) {\n      this.panel.Values = [\n        {\n          Name: this.panel.ValueColName,\n          LowBarColor: this.panel.LowBarColor,\n          HighBarColor: this.panel.HighBarColor,\n          Selected: true\n        },\n      ];\n      delete this.panel.ValueColName;\n      delete this.panel.LowBarColor;\n      delete this.panel.HighBarColor;\n    }\n\n    this.dashboardVariables = [];\n    //console.log('Listing variables');\n    if (templateSrv){\n      templateSrv.getVariables().forEach((v) => {      \n        //console.log(JSON.stringify(v, null, 2));\n        if (v.current){\n          //console.log(\"dashboard variable[\" + v.name + \"]=\" + v.current.value);\n          //this.updateNamedValue(this.panel, v.name.split(\"_\"), v.current.value);   ////// WHAT WAS THIS FOR?????\n          this.dashboardVariables.push({name:v.name, value:v.current.value});\n        }\n      });\n    }\n\n    console.log('this.dashboardVariables='+JSON.stringify(this.dashboardVariables, null, 2));\n\n    this.events.on(\n      PanelEvents.dataReceived,\n      this.onDataReceived.bind(this),\n      $scope\n    );\n\n    this.events.on(\n\t  PanelEvents.dataError, \n\t  this.onDataError.bind(this), \n\t  $scope\n\t);\n\n    this.events.on(\n\t  PanelEvents.render, \n\t  this.onRender.bind(this)\n\t);\n\n    this.events.on(\n      PanelEvents.dataSnapshotLoad,\n      this.onDataSnapshotLoad.bind(this)\n    );\n    \n\tthis.events.on(\n      PanelEvents.editModeInitialized,\n      this.onInitEditMode.bind(this)\n    );\n\n    this.className = \"michaeldmoore-multistat-panel-\" + this.panel.id;\n  }\n\n  updateNamedValue(obj, names, value) {\n    let name = names.shift();\n    if (obj[name]) {\n      if (names.length) this.updateNamedValue(obj[name], names, value);\n      else obj[name] = Number(value);\n    }\n  }\n\n  onDataSnapshotLoad(snapshotData) {\n    this.onDataReceived(snapshotData);\n  }\n\n  onDataError(err) {\n    this.seriesList = [];\n    this.data = [];\n    this.displayStatusMessage(\n      \"Query failure, Status=\" + err.status + \", \" + err.statusText\n    );\n  }\n\n  onInitEditMode() {\n    this.metricNames = [\n      \"min\",\n      \"max\",\n      \"avg\",\n      \"current\",\n      \"total\",\n      \"name\",\n      \"first\",\n      \"delta\",\n      \"diff\",\n      \"range\",\n    ];\n    this.sortDirections = [\"none\", \"ascending\", \"descending\"];\n    this.aggregations = [\"all\", \"last\", \"first\", \"mean\", \"max\", \"min\", \"sum\"];\n    this.fontSizes = [\n      \"20%\",\n      \"30%\",\n      \"50%\",\n      \"70%\",\n      \"80%\",\n      \"100%\",\n      \"110%\",\n      \"120%\",\n      \"150%\",\n      \"170%\",\n      \"200%\",\n      \"250%\",\n      \"300%\",\n      \"350%\",\n      \"400%\",\n    ];\n    this.valuePositions = [\"bar base\", \"bar end\", \"top\"];\n    this.curveTypes = [\"Linear\", \"Monotone\", \"Cardinal\", \"Catmull-Rom\"];\n    this.matchTypes = [\"exact\", \"subset\", \"list\", \"reg-ex\"];\n    this.tooltipTypes = [\"light\", \"dark\"];\n    this.addEditorTab(\n      \"Columns\",\n      \"public/plugins/michaeldmoore-multistat-panel/columns.html\",\n      2\n    );\n    this.addEditorTab(\n      \"Layout\",\n      \"public/plugins/michaeldmoore-multistat-panel/layout.html\",\n      3\n    );\n    this.addEditorTab(\n      \"Grouping\",\n      \"public/plugins/michaeldmoore-multistat-panel/grouping.html\",\n      4\n    );\n    this.addEditorTab(\n      \"Options\",\n      \"public/plugins/michaeldmoore-multistat-panel/options.html\",\n      5\n    );\n    this.addEditorTab(\n      \"Lines-and-Limits\",\n      \"public/plugins/michaeldmoore-multistat-panel/linesandlimits.html\",\n      6\n    );\n    this.addEditorTab(\n      \"Bar links\",\n      \"public/plugins/michaeldmoore-multistat-panel/barlinks.html\",\n      7\n    );\n  }\n\n  onDataReceived(data) {\n    this.cols = [];\n     //console.log('onDataReceived(' + JSON.stringify(data, null, 2) + ')');\n    if (data.length == 0 || data[0].rows.length == 0) {\n      this.displayStatusMessage(\"No data to show\");\n      this.data = data;\n      this.rows = null;\n      this.render();\n    } else if (/*data[0].type == \"table\" || */data[0].columns) {\n      this.data = data[0];\n\n      for (let i = 0; i < this.data.columns.length; i++)\n        this.cols[i] = this.data.columns[i].text;\n      this.cols0 = [\"\"].concat(this.cols);\n\n      this.render();\n    } else {\n      this.displayStatusMessage(\"Multistat only supports Table datasets\");\n      this.data = data;\n      this.rows = null;\n      this.render();\n    }\n  }\n\n  randomColor() {\n    var letters = '456789ABCDE'.split('');\n    var color = '#';\n    for (var i = 0; i < 6; i++ ) {\n      color += letters[Math.floor(Math.random() * letters.length)];\n    }\n    return color;\n  }\n\n  getContrastingColor(hexcolor) {\n    let match = /^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/i.exec(hexcolor);\n    if (match) {\n      let r = parseInt(match[1]);\n      let g = parseInt(match[2]);\n      let b = parseInt(match[3]);\n      \n      let brightness = (0.2126 * r + 0.7152 * g + 0.0722 * b);\n      let contrastingColor = brightness < 128 ? '#ffffff' : '#000000';\n      return contrastingColor;\n    } \n  \n    match = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hexcolor);\n    if (match) {\n      let r1 = parseInt(match[1], 16);\n      let g1 = parseInt(match[2], 16);\n      let b1 = parseInt(match[3], 16);\n      \n      let brightness = (0.2126 * r1 + 0.7152 * g1 + 0.0722 * b1);\n      let contrastingColor = brightness < 128 ? '#ffffff' : '#000000';\n      return contrastingColor;\n    } \n\n  return this.panel.ValueColor;\n}\n\n  onValueAdd() {\n    this.ctrl.panel.Values.push({\n      Name:'', \n      HighBarColor:this.randomColor(), \n      LowBarColor:this.randomColor(), \n      Selected: true});\n    this.ctrl.render();\n  }\n\n  onReorderValues(index, up) {\n    const Values = this.ctrl.panel.Values;\n    if (up) {\n      if (index) Values[index] = Values.splice(index - 1, 1, Values[index])[0];\n    } else {\n      if (index + 1 < Values.length)\n        Values[index] = Values.splice(index + 1, 1, Values[index])[0];\n    }\n\n    this.render();\n  }\n\n  onReorderRecolorRules(index, up) {\n    const RecolorRules = this.ctrl.panel.RecolorRules;\n    if (up) {\n      if (index)\n        RecolorRules[index] = RecolorRules.splice(\n          index - 1,\n          1,\n          RecolorRules[index]\n        )[0];\n    } else {\n      if (index + 1 < RecolorRules.length)\n        RecolorRules[index] = RecolorRules.splice(\n          index + 1,\n          1,\n          RecolorRules[index]\n        )[0];\n    }\n\n    this.render();\n  }\n\n\n  onReorderGroupRenamingRules(index, up) {\n    const GroupRenamingRules = this.ctrl.panel.GroupRenamingRules;\n    if (up) {\n      if (index)\n        GroupRenamingRules[index] = GroupRenamingRules.splice(\n          index - 1,\n          1,\n          GroupRenamingRules[index]\n        )[0];\n    } else {\n      if (index + 1 < GroupRenamingRules.length)\n        GroupRenamingRules[index] = GroupRenamingRules.splice(\n          index + 1,\n          1,\n          GroupRenamingRules[index]\n        )[0];\n    }\n\n    this.render();\n  }\n\n\n  onReorderLabelRenamingRules(index, up) {\n    const LabelRenamingRules = this.ctrl.panel.GroupRenamingRules;\n    if (up) {\n      if (index)\n        GroupRenamingRules[index] = GroupRenamingRules.splice(\n          index - 1,\n          1,\n          GroupRenamingRules[index]\n        )[0];\n    } else {\n      if (index + 1 < GroupRenamingRules.length)\n        GroupRenamingRules[index] = GroupRenamingRules.splice(\n          index + 1,\n          1,\n          GroupRenamingRules[index]\n        )[0];\n    }\n\n    this.render();\n  }\n\n  onReorderLinks(index, up) {\n    const Links = this.ctrl.panel.Links;\n    if (up) {\n      if (index) Links[index] = Links.splice(index - 1, 1, Links[index])[0];\n    } else {\n      if (index + 1 < Links.length)\n        Links[index] = Links.splice(index + 1, 1, Links[index])[0];\n    }\n\n    this.render();\n  }\n\n  buildDateHtml(dateTimeCol) {\n    var $title = this.elem.closest(\".panel-container\").find(\".panel-title\");\n    var $maxDate = $title.find(\"span.michaeldmoore-multistat-panel-maxDate\");\n\n    if ($maxDate.length == 0)\n      $maxDate = $title\n        .append('<span class=\"michaeldmoore-multistat-panel-maxDate\"/>')\n        .children()\n        .last();\n\n    if (dateTimeCol != -1 && this.panel.ShowDate) {\n      var maxDate = this.rows[0][dateTimeCol];\n\n      for (let i = 1; i < this.rows.length; i++) {\n        if (maxDate < this.rows[i][dateTimeCol])\n          maxDate = this.rows[i][dateTimeCol];\n      }\n\n      var dd = moment(maxDate).add(this.panel.TZOffsetHours, \"h\");\n\n      if (this.panel.DateFormat.toUpperCase() == \"ELAPSED\")\n        $maxDate.text(dd.fromNow()).show();\n      else $maxDate.text(dd.format(this.panel.DateFormat)).show();\n    } else $maxDate.hide();\n  }\n\n  displayStatusMessage(msg) {\n    this.elem.html(\n      \"<div class='michaeldmoore-multistat-panel-statusmessage'>\" +\n      msg +\n      \"</div>\"\n    );\n  }\n\n  processRenamingRules(rules, name) {\n    let newName = name;\n    rules.forEach((rule) => {\n      if (rule.enabled) {\n        let regex = new RegExp(rule.from, \"ig\");\n        newName = newName.replaceAll(regex, rule.to);\n      }\n    });\n    return newName;\n  }\n\n  onRender() {\n    if (this.data != null && this.data.rows && this.data.rows.length) {\n      var cols = this.cols;\n      var dateTimeCol = -1;\n      var labelCol = -1;\n      var sortCol = 0;\n      var groupCol = -1;\n      var recolorCol = -1;\n\n      // clone dashboard variables array\n      var dashboardVariables = [...this.dashboardVariables];\n      let range = this.timeSrv.timeRangeForUrl();\n      dashboardVariables.push({name:\"from\", value:range.from});\n      dashboardVariables.push({name:\"to\", value:range.to});\n\n      cols.forEach((colName, i) => {\n        if (colName == this.panel.DateTimeColName) dateTimeCol = i;\n        if (colName == this.panel.LabelColName) labelCol = i;\n        if (colName == this.panel.SortColName) sortCol = i;\n        if (colName == this.panel.GroupColName) groupCol = i;\n        if (colName == this.panel.RecolorColName) recolorCol = i;\n\n        this.panel.Values.forEach((Value) => {\n          if (colName == Value.Name) {\n            Value.Col = i;\n          }\n        });\n      });\n\n      var SelectedValues = this.panel.Values.filter(\n        (value) => value.Col >= 0 && value.Selected\n      );\n\n      //console.log('onRender: this.data.rows\\n'+JSON.stringify(this.data.rows));\n\n      // process renaming rules (if any) on all group and label column data\n      let renamedRows = this.data.rows;\n      if ((dateTimeCol != -1 && this.panel.DateFormat.length) || \n          this.panel.LabelRenamingRules.length || \n          (groupCol != -1 && this.panel.GroupRenamingRules.length)) {\n          renamedRows = this.data.rows.map((row) => {\n            let renamedRow = [...row];\n\n          if (dateTimeCol != -1 && this.panel.DateFormat.length){\n            let parsedDateTime = moment(renamedRow[dateTimeCol]);\n\n            if(!parsedDateTime._isValid) {\n              let timeStamp = Number(renamedRow[dateTimeCol]);\n\n              if (timeStamp <= 4102444800) // 2100-01-01 in seconds\n                parsedDateTime = moment.unix(timeStamp).utc(); // try parsing timestamp as unix timestamp (in seconds)\n              else\n                parsedDateTime = moment(timeStamp).utc();  // try parsing timestamp as unix timestamp (in milli-seconds)\n            }\n  \n            renamedRow[dateTimeCol] = parsedDateTime.add(this.panel.TZOffsetHours, \"h\").format(this.panel.DateFormat);\n          }\n\n          renamedRow[labelCol] = this.processRenamingRules(this.panel.LabelRenamingRules, renamedRow[labelCol]);\n\n          if (groupCol != -1)\n            renamedRow[groupCol] = this.processRenamingRules(this.panel.GroupRenamingRules, renamedRow[groupCol]);\n          return renamedRow;\n        });\n      }\n\n      const groupedLabelFunc = function (obj) {\n        if (groupCol != -1) return obj[groupCol] + \":\" + obj[labelCol];\n        else return obj[labelCol];\n      };\n\n      if (this.panel.LabelNameFilter.length > 0 && labelCol != -1) {\n        var regex = new RegExp(this.panel.LabelNameFilter, \"\");\n        this.matchingRows = [];\n        for (let i = 0; i < renamedRows.length; i++) {\n          let dd = renamedRows[i];\n          let label = dd[labelCol];\n          if (label.match(regex) != null) \n            this.matchingRows.push(dd);\n        }\n\n        if (this.matchingRows.length == 0) {\n          this.displayStatusMessage(\n            \"No data.  Regex filter '\" +\n            this.panel.LabelNameFilter +\n            \"' eliminated all \" +\n            renamedRows.length +\n            \" rows from current query\"\n          );\n          return;\n        }\n      } else this.matchingRows = renamedRows;\n\n      if (\n        this.panel.Aggregate != \"all\" &&\n        labelCol != -1 &&\n        SelectedValues.length > 0\n      ) {\n        var oo = [];\n        this.rows = [];\n        switch (this.panel.Aggregate) {\n          case \"first\":\n            this.rows = d3\n              .nest()\n              .key(groupedLabelFunc)\n              .rollup(function (d) {\n                return d[0];\n              })\n              .entries(this.matchingRows)\n              .forEach(function (x) {\n                oo.push(x.value);\n              });\n            this.rows = oo;\n            break;\n\n          case \"last\":\n            this.rows = d3\n              .nest()\n              .key(groupedLabelFunc)\n              .rollup(function (d) {\n                return d[d.length - 1];\n              })\n              .entries(this.matchingRows)\n              .forEach(function (x) {\n                oo.push(x.value);\n              });\n            this.rows = oo;\n            break;\n\n          case \"sum\":\n            this.rows = d3\n              .nest()\n              .key(groupedLabelFunc)\n              .rollup(function (d) {\n                var dd = Object.values(Object.assign({}, d[d.length - 1]));\n                SelectedValues.forEach((value) => {\n                  dd[value.Col] = d3.sum(d, function (d) {\n                    return d[value.Col];\n                  });\n                });\n                return dd;\n              })\n              .entries(this.matchingRows)\n              .forEach(function (x) {\n                oo.push(x.value);\n              });\n            this.rows = Array.from(oo);\n            break;\n\n          case \"mean\":\n            this.rows = d3\n              .nest()\n              .key(groupedLabelFunc)\n              .rollup(function (d) {\n                var dd = Object.values(Object.assign({}, d[d.length - 1]));\n                SelectedValues.forEach((value) => {\n                  dd[value.Col] = d3.mean(d, function (d) {\n                    return d[value.Col];\n                  });\n                });\n                return dd;\n              })\n              .entries(this.matchingRows)\n              .forEach(function (x) {\n                oo.push(x.value);\n              });\n            this.rows = Array.from(oo);\n            break;\n\n            case \"mean\":\n              this.rows = d3\n                .nest()\n                .key(groupedLabelFunc)\n                .rollup(function (d) {\n                  var dd = Object.values(Object.assign({}, d[d.length - 1]));\n                  dd[valueCol] = d3.mean(d, function (d) {\n                    return d[valueCol];\n                  });\n                  return dd;\n                })\n                .entries(this.matchingRows)\n                .forEach(function (x) {\n                  oo.push(x.value);\n                });\n              this.rows = Array.from(oo);\n              break;\n  \n            case \"max\":\n            this.rows = d3\n              .nest()\n              .key(groupedLabelFunc)\n              .rollup(function (d) {\n                var dd = Object.values(Object.assign({}, d[d.length - 1]));\n                SelectedValues.forEach((value) => {\n                  dd[value.Col] = d3.max(d, function (d) {\n                    return d[value.Col];\n                  });\n                });\n                return dd;\n              })\n              .entries(this.matchingRows)\n              .forEach(function (x) {\n                oo.push(x.value);\n              });\n            this.rows = Array.from(oo);\n            break;\n\n          case \"min\":\n            this.rows = d3\n              .nest()\n              .key(groupedLabelFunc)\n              .rollup(function (d) {\n                var dd = Object.values(Object.assign({}, d[d.length - 1]));\n                SelectedValues.forEach((value) => {\n                  dd[value.Col] = d3.min(d, function (d) {\n                    return d[value.Col];\n                  });\n                });\n                return dd;\n              })\n              .entries(this.matchingRows)\n              .forEach(function (x) {\n                oo.push(x.value);\n              });\n            this.rows = Array.from(oo);\n            break;\n        }\n      } else {\n        this.rows = this.matchingRows;\n      }\n\n      //console.log('after aggregation('+this.panel.Aggregate+') this.rows:\\n'+JSON.stringify(this.rows));\n\n      var groupNameOffset = this.panel.ShowGroupLabels\n        ? Number(this.panel.GroupLabelFontSize.replace(\"%\", \"\")) * 0.15\n        : 0;\n\n      if (groupCol >= 0) {\n        this.groupedRows = d3\n          .nest()\n          .key(function (d) {\n            return d[groupCol];\n          })\n          .entries(this.rows);\n\n        if (this.panel.GroupNameFilter.length > 0) {\n          var regexGroupRows = new RegExp(this.panel.GroupNameFilter, \"\");\n          let matchingGroups = [];\n          for (let i = 0; i < this.groupedRows.length; i++) {\n            let groupName = this.groupedRows[i].key;\n            if (groupName.match(regexGroupRows) != null)\n              matchingGroups.push(this.groupedRows[i]);\n          }\n\n          if (matchingGroups.length > 0) this.groupedRows = matchingGroups;\n          else {\n            this.displayStatusMessage(\n              \"No groups.  Group Regex filter '\" +\n              this.panel.GroupNameFilter +\n              \"' eliminated all \" +\n              this.groupedRows.length +\n              \" groups from current query\"\n            );\n            return;\n          }\n        }\n\n        let groupSortString = this.panel.GroupSortString;\n\n        this.groupedRows.sort(function (a, b) {\n          var aPos = groupSortString.search(a.key);\n          var bPos = groupSortString.search(b.key);\n\n          if (aPos == bPos) return a.key.localeCompare(b.key);\n          else if (aPos == -1) return 1;\n          else if (bPos == -1) return -1;\n          else return aPos - bPos;\n        });\n      } else {\n        this.groupedRows = null;\n      }\n\n      this.elem.html(\n        \"<div class='\" +\n        this.className +\n        \"' style='display: flex; flex-direction: column; height:100%; width:100%'>\" +\n        \"</div>\"\n      );\n\n      var $container = this.elem.find(\"div\");\n\n      this.svg = d3\n        .select(\".\" + this.className)\n        .append(\"svg\")\n        .attr(\"height\", \"100%\");\n\n      if (this.panel.Legend) {\n        var $legend = $container\n          .append(\n            \"<div><p></p><ul class='michaeldmoore-multistat-panel-legend'></ul></div>\"\n          )\n          .find(\"ul\");\n\n        const legendValues = this.panel.Values.filter(\n          (value) => value.Col >= 0\n        );\n        legendValues.forEach((value, i) => {\n          ///////////////////////////////////////////////////////////////////////////////\n          // Be careful with this - the toggling/selection logic is quite complicated. //\n          ///////////////////////////////////////////////////////////////////////////////\n          let deselectedClassName = value.Selected\n            ? \"\"\n            : \" class='michaeldmoore-multistat-panel-legend-deselected'\";\n          $legend\n            .append(\"<li\" + deselectedClassName + \">\" + value.Name + \"</li>\")\n            .children()\n            .last()\n            .css(\"background-color\", value.HighBarColor)\n            .css(\"color\", this.getContrastingColor(value.HighBarColor))\n            .click(function () {\n              //console.log('legend-click() value='+JSON.stringify(value,null,2));\n              if (window.event.ctrlKey) {\n                // toggle this item only\n                value.Selected = !value.Selected;\n              } else {\n                if (!value.Selected || SelectedValues.length != 1) {\n                  // deselect everything\n                  legendValues.forEach((v) => (v.Selected = false));\n                  // and re-select this one;\n                  value.Selected = true;\n                } else {\n                  legendValues.forEach((v) => (v.Selected = true));\n                }\n              }\n              //console.log('legend-click() legendValues='+JSON.stringify(legendValues,null,2));\n              // force a re-render\n              CTRL.$scope.$apply(() => {\n                CTRL.render();\n              });\n            });\n        });\n      }\n\n      var h = $container.find(\"svg\").height();\n      var w = $container.width() - 15;\n\n      this.buildDateHtml(dateTimeCol);\n\n      var labelMargin =\n        isNumber(this.panel.LabelMargin) && this.panel.LabelMargin >= 0\n          ? this.panel.LabelMargin\n          : null;\n      var lowSideMargin =\n        this.panel.LowSideMargin >= 0 ? this.panel.LowSideMargin : 0;\n      var highSideMargin =\n        this.panel.HighSideMargin >= 0 ? this.panel.HighSideMargin : 0;\n\n      this.svg\n        .selectAll(\"rect.michaeldmoore-multistat-panel-bar.highflash\")\n        .interrupt();\n\n      this.svg\n        .selectAll(\"rect.michaeldmoore-multistat-panel-bar.lowflash\")\n        .interrupt();\n\n      var id = this.panel.id;\n      var barPadding = this.panel.BarPadding;\n      var multiBarPadding = this.panel.MultiBarPadding;\n      var baseLineValue = this.panel.BaseLineValue;\n      var minLineValue = this.panel.MinLineValue;\n      var maxLineValue = this.panel.MaxLineValue;\n      var highLimitValue = this.panel.HighLimitValue;\n      var HighLimitBarColor = this.panel.HighLimitBarColor;\n      var HighLimitBarFlashColor = this.panel.HighLimitBarFlashColor;\n      var HighLimitBarFlashTimeout = this.panel.HighLimitBarFlashTimeout;\n      var recolorHighLimitBar = this.panel.RecolorHighLimitBar;\n      var Links = this.panel.Links;\n      var lowLimitValue = this.panel.LowLimitValue;\n      var LowLimitBarColor = this.panel.LowLimitBarColor;\n      var LowLimitBarFlashColor = this.panel.LowLimitBarFlashColor;\n      var LowLimitBarFlashTimeout = this.panel.LowLimitBarFlashTimeout;\n      var RecolorRules = this.panel.RecolorRules;\n      var recolorLowLimitBar = this.panel.RecolorLowLimitBar;\n      var flashHighLimitBar = this.panel.FlashHighLimitBar;\n      var flashLowLimitBar = this.panel.FlashLowLimitBar;\n      var tooltipType = this.panel.ToolTipType;\n      var tooltipFontSize = this.panel.ToolTipFontSize;\n      var DateTimeColName = this.panel.DateTimeColName;\n      var TooltipDateFormat = this.panel.TooltipDateFormat;\n      var ValueColName = this.panel.ValueColName;\n      var ValueDecimals = this.panel.ValueDecimals;\n      var OddRowColor = this.panel.OddRowColor;\n      var EvenRowColor = this.panel.EvenRowColor;\n      var OutlineColor = this.panel.OutlineColor;\n      var TZOffsetHours = this.panel.TZOffsetHours;\n      var GroupCols = this.panel.GroupCols;\n      var GroupGap = this.panel.GroupGap;\n      var VGroupGap = this.panel.VGroupGap;\n      var ScaleFactor = Number(this.panel.ScaleFactor);\n      var ValuePosition = this.panel.ValuePosition;\n\n      var panelID = \"michaeldmoore-multistat-panel-\" + id;\n      var tooltipDivID = \"michaeldmoore-multistat-panel-tooltip-\" + id;\n\n      var minValue =\n        SelectedValues.length &&\n        d3.min(this.rows, function (d) {\n          let min = Number(d[SelectedValues[0].Col]);\n          for (var i = 1; i < SelectedValues.length; i++) {\n            let col = SelectedValues[i].Col;\n            let val = Number(d[col]);\n            if (min > val) min = val;\n          }\n          return min * ScaleFactor;\n        });\n      if (isNumber(minLineValue) == false) minLineValue = minValue;\n\n      var maxValue =\n        SelectedValues.length &&\n        d3.max(this.rows, function (d) {\n          let max = Number(d[SelectedValues[0].Col]);\n          for (var i = 1; i < SelectedValues.length; i++) {\n            let col = SelectedValues[i].Col;\n            let val = Number(d[col]);\n            if (max < val) max = val;\n          }\n          return max * ScaleFactor;\n        });\n      if (isNumber(maxLineValue) == false) maxLineValue = maxValue;\n\n      if (isNumber(baseLineValue) == false) baseLineValue = 0;\n\n      if (minLineValue > baseLineValue) minLineValue = baseLineValue;\n\n      if (isNumber(lowLimitValue) && minLineValue > lowLimitValue)\n        minLineValue = lowLimitValue;\n\n      if (maxLineValue < baseLineValue) maxLineValue = baseLineValue;\n\n      if (isNumber(highLimitValue) && maxLineValue < highLimitValue)\n        maxLineValue = highLimitValue;\n\n      $(\"#\" + tooltipDivID).remove();\n\n      var sortData = function (data, sortDirection) {\n        if (sortDirection != \"none\") {\n          var ascending = sortDirection == \"ascending\";\n          data.sort(function (x, y) {\n            let xx = x[sortCol];\n            let yy = y[sortCol];\n\n            if (isNumber(xx) && isNumber(yy))\n              return ascending ? xx - yy : yy - xx;\n            else return ascending ? xx.localeCompare(yy) : yy.localeCompare(xx);\n          });\n        }\n      };\n\n      var translateValues = function (s, d) {\n        // lookup column index corresponding to the substitution tokens and replace with this bar's value\n        let s1 = s;\n        const re = /\\{[^}]+\\}/g;\n        let g = re.exec(s);\n        while (g) {\n          //console.log('Translating token '+g);\n          for (var i = 0; i < cols.length; i++) {\n            if (g == \"{\" + cols[i] + \"}\") {\n              s1 = s1.replace(g, d[i]);\n              break;\n            }\n          }\n\n          // do the same thing with dashboard variables...\n          for (var j = 0; j < dashboardVariables.length; j++) {\n            let dv = dashboardVariables[j];\n            if (g == \"{\" + dv.name + \"}\"){\n              //console.log(\"dashboard variable[\" + dv.name + \"]=\" + dv.value);\n              s1 = s1.replace(g, dv.value);\n              break;\n            }\n          }      \n\n          g = re.exec(s);\n        }\n        //console.log('Translating url '+s+' to ' + s1);\n        return s1;\n      };\n\n      var getTooltipContent = function (d) {\n        let html = \"\";\n        if (tooltipType && Array.isArray(d)) {\n          html +=\n            \"<table style='font-size:\" +\n            tooltipFontSize.replace(\"%\", \"\") / 100 +\n            \"em'>\";\n          if (labelCol != -1)\n            html +=\n              \"<thead><tr class='michaeldmoore-multistat-panel-tooltip-title'><th colspan='2' align='center'>\" +\n              d[labelCol] +\n              \"</th></tr></thead>\";\n          if (Array.isArray(d)) {\n            html += \"<tbody>\";\n            for (var i = 0; i < d.length; i++) {\n              if (i != labelCol) {\n                var cc = cols[i];\n                var dd = d[i];\n\n                if (cc == DateTimeColName)\n                  dd = TooltipDateFormat.length ? moment(dd)\n//                    .add(TZOffsetHours, \"h\")\n                    .format(TooltipDateFormat) : dd;\n                else if (cc == ValueColName && isNumber(dd))\n                  dd = Number(dd).toFixed(ValueDecimals);\n\n                html += \"<tr><td>\" + cc + \"</td><td>\" + dd + \"</td></tr>\";\n              }\n            }\n            html += \"</tbody></table>\";\n          }\n\n          if (Links.length) {\n            html += \"<table><tbody>\";\n            Links.forEach((l) => {\n              html +=\n                \"<tr><td align='right'><i class='fa fa-link'></i></td><td><a href='\" +\n                translateValues(l.url, d) +\n                (l.newtab ? \"' target='_blank'\" : \"'\") +\n                \">\" +\n                translateValues(l.name, d) +\n                \"</a></td></tr>\";\n            });\n            html += \"</tbody></table>\";\n          }\n        }\n\n        return html;\n      };\n\n      var isInTooltip = false;\n      var $panel;\n      var $panelContent;\n      var panelContent;\n      var tooltipShow = function (d) {\n        if ($(\"#\" + tooltipDivID).length == 0) {\n          $panel = $(\".\" + panelID);\n          //          $panelContent = this.elem.closest(\".panel-content\");\n          $panelContent = $panel.parent().parent().parent().parent();\n          panelContent = d3.selectAll($panelContent);\n          panelContent\n            .append(\"div\")\n            .attr(\"id\", tooltipDivID)\n            .style(\"opacity\", 0);\n        }\n\n        const tooltipDiv = d3.selectAll(\"#\" + tooltipDivID);\n\n        let tooltipHtml = getTooltipContent(d);\n        if (tooltipHtml.length){\n          tooltipDiv\n          .classed(\n            \"michaeldmoore-multistat-panel-\" + tooltipType + \"-tooltip\",\n            true\n          )\n          .html(tooltipHtml)\n          .on(\"mouseover\", function () {\n            if (!isInTooltip) {\n              isInTooltip = true;\n              tooltipHide(true);\n            }\n          })\n          .on(\"mouseleave\", function () {\n            isInTooltip = false;\n            tooltipHide(false);\n          });\n\n        const $tooltipDiv = $(\"#\" + tooltipDivID);\n        const tooltipWidth = $tooltipDiv.width();\n        const tooltipHeight = $tooltipDiv.height();\n        const minTop = 28;\n\n        const mouseCoordinates = d3.mouse(panelContent.node());\n        let Left = mouseCoordinates[0] - tooltipWidth / 2;\n        let Top = mouseCoordinates[1] + minTop - tooltipHeight / 2;\n\n        let panelWidth = $panel.width();\n        let panelHeight = $panel.height();\n\n        if (Left < 0) Left = 0;\n        else if (Left > panelWidth - tooltipWidth)\n          Left = panelWidth - tooltipWidth;\n\n        if (Top < 0) Top = 0;\n        else if (Top > panelHeight + minTop - tooltipHeight)\n          Top = panelHeight + minTop - tooltipHeight;\n\n        tooltipDiv\n          .transition()\n          .duration(200)\n          .style(\"opacity\", 1.0)\n          .style(\"left\", Left + \"px\")\n          .style(\"top\", Top + \"px\");\n        }\n      };\n\n      var tooltipHide = function (cancel) {\n        const tooltipDiv = d3.selectAll(\"#\" + tooltipDivID);\n\n        if (cancel) {\n          //console.log(\"cancelling tooltip hide\");\n          tooltipDiv.transition().style(\"opacity\", 1.0);\n        } else {\n          tooltipDiv\n            .transition()\n            .duration(2000)\n            .style(\"opacity\", 0)\n            .on(\"end\", function () {\n              d3.select(this)\n                .html(\"\")\n                .classed(\n                  \"michaeldmoore-multistat-panel-\" + tooltipType + \"-tooltip\",\n                  false\n                );\n            });\n        }\n      };\n\n      var scaleAndClipValue = function (d) {\n        var val = d * ScaleFactor;\n        if (val > maxLineValue) val = maxLineValue;\n        if (val < minLineValue) val = minLineValue;\n\n        return val;\n      };\n\n      var getBarColor = function (d, valueDef) {\n        if (recolorCol != -1) {\n          let recolorString = d[recolorCol];\n\n          if (RecolorRules.length) {\n            if (recolorString) {\n              let recolorRule = RecolorRules.find((r) => {\n                if (r.pattern) {\n                  switch (r.matchType) {\n                    case \"reg-ex\":\n                      let re = RegExp(r.pattern);\n                      return re.test(recolorString);\n\n                    case \"list\":\n                      return r.pattern.indexOf(recolorString) != -1;\n\n                    case \"subset\":\n                      return recolorString.indexOf(r.pattern) != -1;\n\n                    default:\n                      return r.pattern === recolorString;\n                  }\n                }\n                return false;\n              });\n\n              if (recolorRule) return recolorRule.color;\n            }\n          }\n\n          // no matching rule found, check if recolorString is a valid color\n          const s = new Option().style;\n          s.color = recolorString;\n          if (s.color !== \"\") return recolorString;\n        }\n\n        let value = d[valueDef.Col] * ScaleFactor;\n        if (recolorHighLimitBar && value > highLimitValue)\n          return HighLimitBarColor;\n        if (recolorLowLimitBar && value < lowLimitValue)\n          return LowLimitBarColor;\n\n        // All else fails, let's use the standard colors for this bar...\n        return value > baseLineValue\n          ? valueDef.HighBarColor\n          : valueDef.LowBarColor;\n      };\n\n      var getValueColor = function (d, valueDef) {\n        let barColor = getBarColor(d, valueDef);\n        let valueColor = CTRL.getContrastingColor(barColor);\n        return valueColor;\n      };\n\n      if (this.panel.Horizontal) {\n        var plotGroupHorizontal = function (\n          panel,\n          svg,\n          data,\n          numRows,\n          groupName,\n          groupNameOffset,\n          left,\n          w,\n          hh,\n          dh\n        ) {\n          // Draw border rectangle\n          /*svg.append(\"rect\")\n\t\t\t\t\t\t\t\t\t\t.attr(\"width\", w)\n\t\t\t\t\t\t\t\t\t\t.attr(\"height\", dh)\n\t\t\t\t\t\t\t\t\t\t.attr(\"x\", left)\n\t\t\t\t\t\t\t\t\t\t.attr(\"y\", hh)\n\t\t\t\t\t\t\t\t\t\t.attr(\"stroke\", \"yellow\");*/\n\n          sortData(data, panel.SortDirection);\n\n          // Add Above-High Side Group Names\n          if (groupName != \"\" && panel.ShowGroupLabels) {\n            svg\n              .append(\"text\")\n              .text(groupName)\n              .attr(\"x\", left + (labelMargin + w) / 2)\n              .attr(\"y\", hh + groupNameOffset / 2)\n              .attr(\"font-family\", \"sans-serif\")\n              .attr(\"font-size\", panel.GroupLabelFontSize)\n              .attr(\"fill\", panel.GroupLabelColor)\n              .attr(\"background\", \"blue\")\n              .attr(\"text-anchor\", \"middle\")\n              .attr(\"dominant-baseline\", \"central\");\n          }\n\n          hh += groupNameOffset;\n          dh -= groupNameOffset;\n\n          // Draw border rectangle\n          /*svg.append(\"rect\")\n\t\t\t\t\t\t\t\t\t\t.attr(\"width\", w)\n\t\t\t\t\t\t\t\t\t\t.attr(\"height\", dh)\n\t\t\t\t\t\t\t\t\t\t.attr(\"x\", left)\n\t\t\t\t\t\t\t\t\t\t.attr(\"y\", hh)\n\t\t\t\t\t\t\t\t\t\t.attr(\"stroke\", \"#ffffff\");*/\n\n          var labels = data.map(function (d) {\n            return d[labelCol];\n          });\n          while (labels.length < numRows)\n            labels = labels.concat(\n              \"_\" + Math.random().toString(36).substr(2, 9)\n            );\n\n          var labelScale = d3\n            .scaleBand()\n            .domain(labels)\n            .rangeRound([hh + highSideMargin, hh + dh - lowSideMargin])\n            .paddingInner(barPadding / 100)\n            .paddingOuter(barPadding / 200);\n\n          var stripedata = data.concat(d3.range(data.length, numRows));\n\n          var stripeScale = d3\n            .scaleBand()\n            .domain(stripedata)\n            .rangeRound([hh + highSideMargin, hh + dh - lowSideMargin]);\n\n          // Draw background of alternating stripes\n          var oddeven = false;\n          svg\n            .append(\"g\")\n            .selectAll(\"rect\")\n            .data(stripedata)\n            .enter()\n            .append(\"rect\")\n            .attr(\"class\", \"michaeldmoore-multistat-panel-row\")\n            .attr(\"width\", w)\n            .attr(\"height\", stripeScale.step())\n            .attr(\"x\", left)\n            .attr(\"y\", function (d) {\n              return stripeScale(d);\n            })\n            .attr(\"fill\", function (d) {\n              oddeven = !oddeven;\n              return oddeven ? OddRowColor : EvenRowColor;\n            });\n\n          var g1 = svg\n            .append(\"g\")\n            .selectAll(\"text\")\n            .data(data)\n            .enter()\n            .append(\"g\");\n\n          if (panel.ShowValues && panel.ValuePosition == \"top\") {\n            var maxValueWidth = 0;\n            SelectedValues.forEach((valueDef, index) => {\n              let valueCol = valueDef.Col;\n              if (valueCol >= 0) {\n                let gap =\n                  SelectedValues.length > 1\n                    ? (labelScale.bandwidth() * multiBarPadding) /\n                    (SelectedValues.length - 1) /\n                    100\n                    : 0;\n                let height =\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\n                  SelectedValues.length;\n\n                g1.append(\"text\")\n                  .text(function (d) {\n                    return (Number(d[valueCol]) * ScaleFactor).toFixed(\n                      ValueDecimals\n                    );\n                  })\n                  .attr(\"x\", left + w)\n                  .attr(\"y\", function (d, i) {\n                    return (\n                      labelScale(d[labelCol]) +\n                      height / 2 +\n                      (height + gap) * index\n                    );\n                  })\n                  .attr(\"font-family\", \"sans-serif\")\n                  .attr(\"font-size\", panel.ValueFontSize)\n                  .attr(\"fill\", panel.ValueColor)\n                  .attr(\"text-anchor\", \"end\")\n                  .attr(\"dominant-baseline\", \"central\")\n                  .each(function (d, i) {\n                    var thisWidth = this.getComputedTextLength();\n                    maxValueWidth = d3.max([maxValueWidth, thisWidth]);\n                  });\n              }\n            });\n\n            w -= maxValueWidth;\n          }\n\n          if (panel.ShowLabels) {\n            var maxLabelWidth = 0;\n            var labelAngle = Number(panel.LableAngle);\n            g1.append(\"text\")\n              .text(function (d) {\n                return d[labelCol];\n              })\n              .attr(\"font-family\", \"sans-serif\")\n              .attr(\"font-size\", panel.LabelFontSize)\n              .attr(\"fill\", function (d, i) {\n                if (SelectedValues.length) {\n                  let minvalue = d[SelectedValues[0].Col] * ScaleFactor;\n                  let maxvalue = minvalue;\n                  SelectedValues.forEach((v) => {\n                    let value = d[v.Col] * ScaleFactor;\n                    if (minvalue > value) minvalue = value;\n                    if (maxvalue < value) maxvalue = value;\n                  });\n\n                  if (maxvalue > maxLineValue || minvalue < minLineValue)\n                    return panel.OutOfRangeLabelColor;\n                }\n                return panel.LabelColor;\n              })\n              .attr(\"text-anchor\", \"middle\")\n              .attr(\"dominant-baseline\", \"central\")\n              .attr(\"transform\", function (d, i) {\n                var bbox = this.getBBox();\n                var s = Math.sin((labelAngle * Math.PI) / 180);\n                var c = Math.cos((labelAngle * Math.PI) / 180);\n                var b = Math.abs(bbox.width * s) + Math.abs(bbox.height * c);\n                var a = Math.abs(bbox.width * c) + Math.abs(bbox.height * s);\n\n                var y = labelScale(d[labelCol]) + labelScale.bandwidth() / 2;\n                var x = left + a / 2;\n                return (\n                  \"translate(\" + x + \",\" + y + \") rotate(\" + labelAngle + \")\"\n                );\n              })\n              .each(function (d, i) {\n                var bbox = this.getBBox();\n                var s = Math.sin((labelAngle * Math.PI) / 180);\n                var c = Math.cos((labelAngle * Math.PI) / 180);\n                var b = Math.abs(bbox.width * s) + Math.abs(bbox.height * c);\n                var a = Math.abs(bbox.width * c) + Math.abs(bbox.height * s);\n\n                var thisWidth = a;\n                maxLabelWidth = d3.max([maxLabelWidth, thisWidth]);\n              });\n\n            if (isNumber(labelMargin)) {\n              left += labelMargin;\n              w -= labelMargin;\n            } else {\n              left += maxLabelWidth;\n              w -= maxLabelWidth;\n            }\n          }\n\n          var valueScale = d3\n            .scaleLinear()\n            .domain([minLineValue, maxLineValue])\n            .range([left + labelMargin, left + w])\n            .nice();\n\n          function vLine(svg, value, color, strokeWidth) {\n            svg\n              .append(\"line\")\n              .style(\"stroke\", color)\n              .attr(\"stroke-width\", strokeWidth == null ? 1 : strokeWidth)\n              .attr(\"y1\", hh + highSideMargin)\n              .attr(\"x1\", valueScale(value))\n              .attr(\"y2\", hh + dh - lowSideMargin)\n              .attr(\"x2\", valueScale(value));\n          }\n\n          if (panel.ShowBaseLine)\n            vLine(svg, baseLineValue, panel.BaseLineColor, panel.BaseLineWidth);\n\n          if (panel.ShowMaxLine)\n            vLine(svg, maxLineValue, panel.MaxLineColor, panel.MaxLineWidth);\n\n          if (panel.ShowMinLine)\n            vLine(svg, minLineValue, panel.MinLineColor, panel.MinLineWidth);\n\n          if (panel.ShowHighLimitLine)\n            vLine(\n              svg,\n              highLimitValue,\n              panel.HighLimitLineColor,\n              panel.HighLimitLineWidth\n            );\n\n          if (panel.ShowLowLimitLine)\n            vLine(\n              svg,\n              lowLimitValue,\n              panel.LowLimitLineColor,\n              panel.LowLimitLineWidth\n            );\n\n          if (panel.ShowBars) {\n            SelectedValues.forEach((valueDef, index) => {\n              let valueCol = valueDef.Col;\n              if (valueCol >= 0) {\n                let gap =\n                  SelectedValues.length > 1\n                    ? (labelScale.bandwidth() * multiBarPadding) /\n                    (SelectedValues.length - 1) /\n                    100\n                    : 0;\n                let height =\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\n                  SelectedValues.length;\n\n                g1.append(\"rect\")\n                  .attr(\"class\", \"michaeldmoore-multistat-panel-bar\")\n                  .attr(\"width\", function (d) {\n                    var val = scaleAndClipValue(d[valueCol]);\n                    return Math.abs(\n                      valueScale(val) - valueScale(baseLineValue)\n                    );\n                  })\n                  .attr(\"height\", height)\n                  .attr(\"x\", function (d) {\n                    var val = scaleAndClipValue(d[valueCol]);\n                    return d3.min([valueScale(val), valueScale(baseLineValue)]);\n                  })\n                  .attr(\"y\", function (d, i) {\n                    return labelScale(d[labelCol]) + (height + gap) * index;\n                  })\n                  .attr(\"fill\", function (d) {\n                    return getBarColor(d, valueDef);\n                  })\n                  .classed(\"highflash\", function (d) {\n                    return (\n                      recolorHighLimitBar &&\n                      flashHighLimitBar &&\n                      d[valueCol] * ScaleFactor > highLimitValue\n                    );\n                  })\n                  .classed(\"lowflash\", function (d) {\n                    return (\n                      recolorLowLimitBar &&\n                      flashLowLimitBar &&\n                      d[valueCol] * ScaleFactor < lowLimitValue\n                    );\n                  });\n              }\n            });\n          }\n\n          if (panel.ShowLines) {\n            var bw = labelScale.step();\n\n            if (panel.LineWidth) {\n              var curveFunc = d3.curveLinear;\n              switch (panel.CurveType) {\n                case \"Linear\":\n                  curveFunc = d3.curveLinear;\n                  break;\n                case \"Monotone\":\n                  curveFunc = d3.curveMonotoneY;\n                  break;\n                case \"Cardinal\":\n                  curveFunc = d3.curveCardinal;\n                  break;\n                case \"Catmull-Rom\":\n                  curveFunc = d3.curveCatmullRom;\n                  break;\n              }\n\n              var lineFunction = d3\n                .line()\n                .curve(curveFunc)\n                .x(function (d) {\n                  return d.x;\n                })\n                .y(function (d) {\n                  return d.y;\n                });\n\n              SelectedValues.forEach((value, index) => {\n                let gap =\n                  SelectedValues.length > 1\n                    ? (labelScale.bandwidth() * multiBarPadding) /\n                    (SelectedValues.length - 1) /\n                    100\n                    : 0;\n                let width =\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\n                  SelectedValues.length;\n\n                if (panel.LineWidth) {\n                  var points = [];\n                  for (var i = 0; i < data.length; i++) {\n                    var d = data[i];\n                    var y =\n                      labelScale(d[labelCol]) +\n                      width / 2 +\n                      (width + gap) * index;\n                    var x = valueScale(d[value.Col] * ScaleFactor);\n                    points.push({\n                      x,\n                      y,\n                    });\n                  }\n\n                  svg\n                    .append(\"path\")\n                    .attr(\"d\", lineFunction(points))\n                    .attr(\"stroke\", panel.LineColor)\n                    .attr(\"stroke-width\", panel.LineWidth)\n                    .attr(\"fill\", \"none\");\n                }\n\n                if (panel.DotSize) {\n                  g1.append(\"circle\")\n                    .attr(\"r\", panel.DotSize / 2.0)\n                    .attr(\"fill\", panel.DotColor)\n                    .attr(\"cy\", function (d) {\n                      return (\n                        labelScale(d[labelCol]) +\n                        width / 2 +\n                        (width + gap) * index\n                      );\n                    })\n                    .attr(\"cx\", function (d) {\n                      return valueScale(d[value.Col] * ScaleFactor);\n                    });\n                }\n              });\n            }\n          }\n\n          if (panel.ShowValues && panel.ValuePosition != \"top\") {\n            SelectedValues.forEach((valueDef, index) => {\n              let valueCol = valueDef.Col;\n              if (valueCol >= 0) {\n                let gap =\n                  SelectedValues.length > 1\n                    ? (labelScale.bandwidth() * multiBarPadding) /\n                    (SelectedValues.length - 1) /\n                    100\n                    : 0;\n                let height =\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\n                  SelectedValues.length;\n\n                g1.append(\"text\")\n                  .text(function (d) {\n                    return (Number(d[valueCol]) * ScaleFactor).toFixed(\n                      ValueDecimals\n                    );\n                  })\n                  .attr(\"x\", function (d) {\n                    if (panel.ValuePosition == \"bar base\")\n                      return valueScale(baseLineValue);\n                    else {\n                      // \"bar end\"\n                      var val = scaleAndClipValue(d[valueCol]);\n                      return valueScale(val) + (val > baseLineValue);\n                    }\n                  })\n                  .attr(\"y\", function (d, i) {\n                    return (\n                      labelScale(d[labelCol]) +\n                      height / 2 +\n                      (height + gap) * index\n                    );\n                  })\n                  .attr(\"font-family\", \"sans-serif\")\n                  .attr(\"font-size\", panel.ValueFontSize)\n                  .attr(\"fill\", function(d) {\n                    return getValueColor(d, valueDef);\n                  })\n                  .attr(\"text-anchor\", function (d) {\n                    if (panel.ValuePosition == \"bar base\")\n                      return d[valueCol] * ScaleFactor > baseLineValue\n                        ? \"start\"\n                        : \"end\";\n                    // \"bar end\"\n                    else\n                      return d[valueCol] * ScaleFactor > baseLineValue\n                        ? \"end\"\n                        : \"start\";\n                  })\n                  .attr(\"dominant-baseline\", \"central\");\n              }\n            });\n          }\n\n          svg\n            .append(\"g\")\n            .selectAll(\"rect\")\n            .data(stripedata)\n            .enter()\n            .append(\"rect\")\n            .attr(\"width\", w)\n            .attr(\"height\", stripeScale.step())\n            .attr(\"x\", left)\n            .attr(\"y\", function (d) {\n              return stripeScale(d);\n            })\n            .attr(\"fill\", \"rgba(0,0,0,0)\")\n            .attr(\"stroke\", OutlineColor)\n            .on(\"mouseover\", function (d) {\n              if ((tooltipType && Array.isArray(d)) || Links.length)\n                tooltipShow(d);\n            })\n            .on(\"mouseleave\", function () {\n              if (!isInTooltip) {\n                tooltipHide(false);\n              }\n            });\n\n          // Add High Side Value Axis (X)\n          if (highSideMargin > 0) {\n            var ggHighSide = svg\n              .append(\"g\")\n              .attr(\"transform\", \"translate(1,\" + (hh + highSideMargin) + \")\")\n              .attr(\"class\", \"michaeldmoore-multistat-panel-valueaxis\")\n              .call(d3.axisTop(valueScale));\n\n            ggHighSide\n              .selectAll(\".tick text\")\n              .attr(\"fill\", panel.HighAxisColor);\n\n            ggHighSide\n              .selectAll(\".tick line\")\n              .attr(\"stroke\", panel.HighAxisColor)\n              .attr(\"stroke-width\", panel.HighAxisWidth);\n\n            ggHighSide\n              .selectAll(\"path.domain\")\n              .attr(\"stroke\", panel.HighAxisColor)\n              .attr(\"stroke-width\", panel.HighAxisWidth);\n          }\n\n          // Add Low Side Value Axis (X)\n          if (lowSideMargin > 0) {\n            var ggLowSide = svg\n              .append(\"g\")\n              .attr(\n                \"transform\",\n                \"translate(0,\" + (hh + dh - lowSideMargin) + \")\"\n              )\n              .attr(\"class\", \"michaeldmoore-multistat-panel-valueaxis\")\n              .call(d3.axisBottom(valueScale));\n\n            ggLowSide.selectAll(\".tick text\").attr(\"fill\", panel.LowAxisColor);\n\n            ggLowSide\n              .selectAll(\".tick line\")\n              .attr(\"stroke\", panel.LowAxisColor)\n              .attr(\"stroke-width\", panel.LowAxisWidth);\n\n            ggLowSide\n              .selectAll(\"path.domain\")\n              .attr(\"stroke\", panel.LowAxisColor)\n              .attr(\"stroke-width\", panel.LowAxisWidth);\n          }\n        };\n\n        if (this.groupedRows != null) {\n          var gcols =\n            GroupCols <= 0 || GroupCols > this.groupedRows.length\n              ? this.groupedRows.length\n              : GroupCols;\n          var dw = (w + GroupGap) / gcols;\n\n          // Figure out the max data points in each row of groups...\n          var pointsPerRow = [];\n          for (let i = 0; i < this.groupedRows.length / gcols; i++)\n            pointsPerRow.push(0);\n          for (let i = 0; i < this.groupedRows.length; i++) {\n            let rr = Math.floor(i / gcols);\n            let u = this.groupedRows[i].values.length;\n            if (pointsPerRow[rr] < u) pointsPerRow[rr] = u;\n          }\n\n          var totalPoints = 0;\n          for (let i = 0; i < pointsPerRow.length; i++)\n            totalPoints += pointsPerRow[i];\n\n          var rowOverheadHeight =\n            groupNameOffset +\n            this.panel.LowSideMargin +\n            this.panel.HighSideMargin;\n\n          var rowHeight =\n            (h - (pointsPerRow.length * rowOverheadHeight) - ((pointsPerRow.length - 1) * VGroupGap)) / totalPoints;\n\n          var numRows = Math.ceil(this.groupedRows.length / gcols);\n          var hh = 0;\n          for (var rr = 0; rr < numRows; rr++) {\n            var nn = pointsPerRow[rr];\n            var dh = rowOverheadHeight + (nn * rowHeight);\n            hh += dh;\n            for (var cc = 0; cc < gcols; cc++) {\n              var ii = cc + rr * gcols;\n              if (ii < this.groupedRows.length) {\n                plotGroupHorizontal(\n                  this.panel,\n                  this.svg,\n                  this.groupedRows[ii].values,\n                  nn,\n                  this.groupedRows[ii].key,\n                  groupNameOffset,\n                  cc * dw,\n                  dw - GroupGap,\n                  hh - dh,\n                  dh\n                );\n              }\n            }\n            hh += VGroupGap;\n          }\n        } else {\n          plotGroupHorizontal(\n            this.panel,\n            this.svg,\n            this.rows,\n            this.rows.length,\n            \"\",\n            0,\n            0,\n            w,\n            0,\n            h\n          );\n        }\n      } else {\n        var plotGroupVertical = function (\n          panel,\n          svg,\n          data,\n          numRows,\n          groupName,\n          groupNameOffset,\n          left,\n          w,\n          hh,\n          dh\n        ) {\n          // Draw border rectangle\n          /*svg.append(\"rect\")\n\t\t\t.attr(\"width\", w)\n\t\t\t.attr(\"height\", dh)\n\t\t\t.attr(\"x\", left)\n\t\t\t.attr(\"y\", hh)\n\t\t\t.attr(\"stroke\", \"yellow\");*/\n\n          sortData(data, panel.SortDirection);\n\n          // Add Above-High Side Group Names\n          if (groupName != \"\" && panel.ShowGroupLabels) {\n            svg\n              .append(\"text\")\n              .text(groupName)\n              .attr(\"x\", left + (labelMargin + w) / 2)\n              .attr(\"y\", hh + groupNameOffset / 2)\n              .attr(\"font-family\", \"sans-serif\")\n              .attr(\"font-size\", panel.GroupLabelFontSize)\n              .attr(\"fill\", panel.GroupLabelColor)\n              .attr(\"background\", \"blue\")\n              .attr(\"text-anchor\", \"middle\")\n              .attr(\"dominant-baseline\", \"central\");\n          }\n\n          hh += groupNameOffset;\n          dh -= groupNameOffset;\n\n          // Draw border rectangle\n          /*svg.append(\"rect\")\n\t\t\t\t\t\t\t\t\t\t.attr(\"width\", w)\n\t\t\t\t\t\t\t\t\t\t.attr(\"height\", dh)\n\t\t\t\t\t\t\t\t\t\t.attr(\"x\", left)\n\t\t\t\t\t\t\t\t\t\t.attr(\"y\", hh)\n\t\t\t\t\t\t\t\t\t\t.attr(\"stroke\", \"#ffffff\");*/\n\n          var labels = data.map(function (d) {\n            return d[labelCol];\n          });\n          while (labels.length < numRows)\n            labels = labels.concat(\n              \"_\" + Math.random().toString(36).substr(2, 9)\n            );\n\n          var labelScale = d3\n            .scaleBand()\n            .domain(labels)\n            .range([left + lowSideMargin, left + w - highSideMargin])\n            .paddingInner(barPadding / 100)\n            .paddingOuter(barPadding / 200);\n\n          var stripedata = data.concat(d3.range(data.length, numRows));\n\n          var stripeScale = d3\n            .scaleBand()\n            .domain(stripedata)\n            .range([left + lowSideMargin, left + w - highSideMargin]);\n\n          // Draw background of alternating stripes\n          var oddeven = false;\n          svg\n            .append(\"g\")\n            .selectAll(\"rect\")\n            .data(stripedata)\n            .enter()\n            .append(\"rect\")\n            .attr(\"class\", \"michaeldmoore-multistat-panel-row\")\n            .attr(\"width\", stripeScale.step())\n            .attr(\"height\", dh)\n            .attr(\"x\", function (d, i) {\n              return stripeScale(d);\n            })\n            .attr(\"y\", hh)\n            .attr(\"fill\", function (d) {\n              oddeven = !oddeven;\n              return oddeven ? OddRowColor : EvenRowColor;\n            });\n\n          var g2 = svg\n            .append(\"g\")\n            .selectAll(\"text\")\n            .data(data)\n            .enter()\n            .append(\"g\");\n\n          if (panel.ShowValues && panel.ValuePosition == \"top\") {\n            var maxValueHeight = 0;\n\n            SelectedValues.forEach((valueDef, index) => {\n              let valueCol = valueDef.Col;\n              if (valueCol >= 0) {\n                let gap =\n                  SelectedValues.length > 1\n                    ? (labelScale.bandwidth() * multiBarPadding) /\n                    (SelectedValues.length - 1) /\n                    100\n                    : 0;\n                let width =\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\n                  SelectedValues.length;\n\n                g2.append(\"text\")\n                  .text(function (d) {\n                    return (Number(d[valueCol]) * ScaleFactor).toFixed(\n                      ValueDecimals\n                    );\n                  })\n                  .attr(\"x\", function (d, i) {\n                    return (\n                      labelScale(d[labelCol]) +\n                      width / 2 +\n                      (width + gap) * index\n                    );\n                  })\n                  .attr(\"y\", hh)\n                  .attr(\"font-family\", \"sans-serif\")\n                  .attr(\"font-size\", panel.ValueFontSize)\n                  .attr(\"fill\", panel.ValueColor)\n                  .attr(\"text-anchor\", \"middle\")\n                  .attr(\"dominant-baseline\", \"text-before-edge\")\n                  .each(function (d, i) {\n                    var thisHeight = this.getBBox().height;\n                    maxValueHeight = d3.max([maxValueHeight, thisHeight]);\n                  });\n              }\n            });\n\n            hh += maxValueHeight;\n            dh -= maxValueHeight;\n          }\n\n          if (panel.ShowLabels) {\n            var maxLabelHeight = 0;\n            var labelAngle = Number(panel.LableAngle);\n            g2.append(\"text\")\n              .text(function (d) {\n                return d[labelCol];\n              })\n              .attr(\"font-family\", \"sans-serif\")\n              .attr(\"font-size\", panel.LabelFontSize)\n              .attr(\"fill\", function (d, i) {\n                if (SelectedValues.length) {\n                  // This should check ALL the SelectedValues, bot just [0]///////////////////////////////////////////////\n                  let minvalue = d[SelectedValues[0].Col] * ScaleFactor;\n                  let maxvalue = minvalue;\n\n                  if (maxvalue > maxLineValue || minvalue < minLineValue)\n                    return panel.OutOfRangeLabelColor;\n                }\n                return panel.LabelColor;\n              })\n              .attr(\"text-anchor\", \"middle\")\n              .attr(\"dominant-baseline\", \"central\")\n              .attr(\"transform\", function (d, i) {\n                var bbox = this.getBBox();\n                var s = Math.sin((labelAngle * Math.PI) / 180);\n                var c = Math.cos((labelAngle * Math.PI) / 180);\n                var b = Math.abs(bbox.width * s) + Math.abs(bbox.height * c);\n                var a = Math.abs(bbox.width * c) + Math.abs(bbox.height * s);\n\n                var x = labelScale(d[labelCol]) + labelScale.bandwidth() / 2;\n                var y = hh + dh - b / 2;\n                return (\n                  \"translate(\" + x + \",\" + y + \") rotate(\" + labelAngle + \")\"\n                );\n              })\n              .each(function (d, i) {\n                var bbox = this.getBBox();\n                var s = Math.sin((labelAngle * Math.PI) / 180);\n                var c = Math.cos((labelAngle * Math.PI) / 180);\n                var b = Math.abs(bbox.width * s) + Math.abs(bbox.height * c);\n                var a = Math.abs(bbox.width * c) + Math.abs(bbox.height * s);\n\n                var thisHeight = b;\n                maxLabelHeight = d3.max([maxLabelHeight, thisHeight]);\n              });\n            if (isNumber(labelMargin)) {\n              dh -= labelMargin;\n            } else {\n              dh -= maxLabelHeight;\n            }\n          }\n\n          var valueScale = d3\n            .scaleLinear()\n            .domain([maxLineValue, minLineValue])\n            .range([hh, hh + dh])\n            .nice();\n\n          function hLine(svg, value, color, strokeWidth) {\n            svg\n              .append(\"line\")\n              .style(\"stroke\", color)\n              .attr(\"stroke-width\", strokeWidth == null ? 1 : strokeWidth)\n              .attr(\"x1\", left + lowSideMargin)\n              .attr(\"y1\", valueScale(value))\n              .attr(\"x2\", left + w - highSideMargin)\n              .attr(\"y2\", valueScale(value));\n          }\n\n          if (panel.ShowBaseLine)\n            hLine(svg, baseLineValue, panel.BaseLineColor, panel.BaseLineWidth);\n\n          if (panel.ShowMaxLine)\n            hLine(svg, maxLineValue, panel.MaxLineColor, panel.MaxLineWidth);\n\n          if (panel.ShowMinLine)\n            hLine(svg, minLineValue, panel.MinLineColor, panel.MinLineWidth);\n\n          if (panel.ShowHighLimitLine)\n            hLine(\n              svg,\n              highLimitValue,\n              panel.HighLimitLineColor,\n              panel.HighLimitLineWidth\n            );\n\n          if (panel.ShowLowLimitLine)\n            hLine(\n              svg,\n              lowLimitValue,\n              panel.LowLimitLineColor,\n              panel.LowLimitLineWidth\n            );\n\n          if (panel.ShowBars) {\n            SelectedValues.forEach((valueDef, index) => {\n              let valueCol = valueDef.Col;\n              if (valueCol >= 0) {\n                let gap =\n                  SelectedValues.length > 1\n                    ? (labelScale.bandwidth() * multiBarPadding) /\n                    (SelectedValues.length - 1) /\n                    100\n                    : 0;\n                let width =\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\n                  SelectedValues.length;\n\n                g2.append(\"rect\")\n                  .attr(\"class\", \"michaeldmoore-multistat-panel-bar\")\n                  .attr(\"height\", function (d) {\n                    var val = scaleAndClipValue(d[valueCol]);\n                    return Math.abs(\n                      valueScale(baseLineValue) - valueScale(val)\n                    );\n                  })\n                  .attr(\"width\", width)\n                  .attr(\"y\", function (d) {\n                    var val = scaleAndClipValue(d[valueCol]);\n                    return d3.min([valueScale(val), valueScale(baseLineValue)]);\n                  })\n                  .attr(\"x\", function (d, i) {\n                    return labelScale(d[labelCol]) + (width + gap) * index;\n                  })\n                  .attr(\"fill\", function (d) {\n                    return getBarColor(d, valueDef);\n                  })\n                  .classed(\"highflash\", function (d) {\n                    return (\n                      recolorHighLimitBar &&\n                      flashHighLimitBar &&\n                      d[valueCol] * ScaleFactor > highLimitValue\n                    );\n                  })\n                  .classed(\"lowflash\", function (d) {\n                    return (\n                      recolorLowLimitBar &&\n                      flashLowLimitBar &&\n                      d[valueCol] * ScaleFactor < lowLimitValue\n                    );\n                  });\n              }\n            });\n          }\n\n          if (panel.ShowLines) {\n            var bw = labelScale.step();\n\n            if (panel.LineWidth) {\n              var curveFunc = d3.curveLinear;\n              switch (panel.CurveType) {\n                case \"Linear\":\n                  curveFunc = d3.curveLinear;\n                  break;\n                case \"Monotone\":\n                  curveFunc = d3.curveMonotoneX;\n                  break;\n                case \"Cardinal\":\n                  curveFunc = d3.curveCardinal;\n                  break;\n                case \"Catmull-Rom\":\n                  curveFunc = d3.curveCatmullRom;\n                  break;\n              }\n\n              var lineFunction = d3\n                .line()\n                .curve(curveFunc)\n                .x(function (d) {\n                  return d.x;\n                })\n                .y(function (d) {\n                  return d.y;\n                });\n\n              SelectedValues.forEach((value, index) => {\n                let gap =\n                  SelectedValues.length > 1\n                    ? (labelScale.bandwidth() * multiBarPadding) /\n                    (SelectedValues.length - 1) /\n                    100\n                    : 0;\n                let width =\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\n                  SelectedValues.length;\n\n                if (panel.LineWidth) {\n                  var points = [];\n                  for (var i = 0; i < data.length; i++) {\n                    var d = data[i];\n                    var x =\n                      labelScale(d[labelCol]) +\n                      width / 2 +\n                      (width + gap) * index;\n                    var y = valueScale(d[value.Col] * ScaleFactor);\n                    points.push({\n                      x,\n                      y,\n                    });\n                  }\n\n                  svg\n                    .append(\"path\")\n                    .attr(\"d\", lineFunction(points))\n                    .attr(\"stroke\", panel.LineColor)\n                    .attr(\"stroke-width\", panel.LineWidth)\n                    .attr(\"fill\", \"none\");\n                }\n\n                if (panel.DotSize) {\n                  g2.append(\"circle\")\n                    .attr(\"r\", panel.DotSize / 2.0)\n                    .attr(\"fill\", panel.DotColor)\n                    .attr(\"cx\", function (d) {\n                      return (\n                        labelScale(d[labelCol]) +\n                        width / 2 +\n                        (width + gap) * index\n                      );\n                    })\n                    .attr(\"cy\", function (d) {\n                      return valueScale(d[value.Col] * ScaleFactor);\n                    });\n                }\n              });\n            }\n          }\n\n          if (panel.ShowValues && panel.ValuePosition != \"top\") {\n            SelectedValues.forEach((valueDef, index) => {\n              let valueCol = valueDef.Col;\n              if (valueCol >= 0) {\n                let gap =\n                  SelectedValues.length > 1\n                    ? (labelScale.bandwidth() * multiBarPadding) /\n                    (SelectedValues.length - 1) /\n                    100\n                    : 0;\n                let width =\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\n                  SelectedValues.length;\n\n                g2.append(\"text\")\n                  .text(function (d) {\n                    return (Number(d[valueCol]) * ScaleFactor).toFixed(\n                      ValueDecimals\n                    );\n                  })\n                  .attr(\"x\", function (d, i) {\n                    return (\n                      labelScale(d[labelCol]) +\n                      width / 2 +\n                      (width + gap) * index\n                    );\n                  })\n                  .attr(\"y\", function (d) {\n                    if (ValuePosition == \"bar base\")\n                      return valueScale(baseLineValue);\n                    else {\n                      var val = scaleAndClipValue(d[valueCol]);\n                      return valueScale(val);\n                    }\n                  })\n                  .attr(\"font-family\", \"sans-serif\")\n                  .attr(\"font-size\", panel.ValueFontSize)\n                  .attr(\"fill\", function(d) {\n                    return getValueColor(d, valueDef);\n                  })\n                  .attr(\"text-anchor\", \"middle\")\n                  .attr(\"dominant-baseline\", function (d) {\n                    if (ValuePosition == \"bar base\")\n                      return d[valueCol] * ScaleFactor > baseLineValue\n                        ? \"text-after-edge\"\n                        : \"text-before-edge\";\n                    else\n                      return d[valueCol] * ScaleFactor > baseLineValue\n                        ? \"text-before-edge\"\n                        : \"text-after-edge\";\n                  });\n              }\n            });\n          }\n\n          svg\n            .append(\"g\")\n            .selectAll(\"rect\")\n            .data(stripedata)\n            .enter()\n            .append(\"rect\")\n            .attr(\"width\", stripeScale.step())\n            .attr(\"height\", dh)\n            .attr(\"x\", function (d) {\n              return stripeScale(d);\n            })\n            .attr(\"y\", hh)\n            .attr(\"fill\", \"rgba(0,0,0,0)\")\n            .attr(\"stroke\", OutlineColor)\n            .on(\"mouseover\", function (d) {\n              if ((tooltipType && Array.isArray(d)) || Links.length)\n                tooltipShow(d);\n            })\n            .on(\"mouseleave\", function () {\n              if (!isInTooltip) {\n                tooltipHide(false);\n              }\n            });\n\n          if (lowSideMargin > 0) {\n            let ggLowSide = svg\n              .append(\"g\")\n              .attr(\"transform\", \"translate(\" + (left + lowSideMargin) + \", 0)\")\n              .classed(\"michaeldmoore-multistat-panel-valueaxis\", true)\n              .call(\n                d3\n                  .axisLeft(valueScale)\n                  .tickSizeInner(5)\n                  .tickSizeOuter(10)\n                  .ticks(5)\n              );\n            ggLowSide.selectAll(\".tick text\").attr(\"fill\", panel.LowAxisColor);\n            ggLowSide\n              .selectAll(\".tick line\")\n              .attr(\"stroke\", panel.LowAxisColor)\n              .attr(\"stroke-width\", panel.LowAxisWidth);\n            ggLowSide\n              .selectAll(\"path.domain\")\n              .attr(\"stroke\", panel.LowAxisColor)\n              .attr(\"stroke-width\", panel.LowAxisWidth);\n          }\n\n          if (highSideMargin > 0) {\n            let ggHighSide = svg\n              .append(\"g\")\n              .attr(\n                \"transform\",\n                \"translate(\" + (left + w - highSideMargin) + \", 0)\"\n              )\n              .classed(\"michaeldmoore-multistat-panel-valueaxis\", true)\n              .call(\n                d3\n                  .axisRight(valueScale)\n                  .tickSizeInner(5)\n                  .tickSizeOuter(10)\n                  .ticks(5)\n              );\n            ggHighSide\n              .selectAll(\".tick text\")\n              .attr(\"fill\", panel.HighAxisColor);\n            ggHighSide\n              .selectAll(\".tick line\")\n              .attr(\"stroke\", panel.HighAxisColor)\n              .attr(\"stroke-width\", panel.HighAxisWidth);\n            ggHighSide\n              .selectAll(\"path.domain\")\n              .attr(\"stroke\", panel.HighAxisColor)\n              .attr(\"stroke-width\", panel.HighAxisWidth);\n          }\n        };\n\n        let groupNameOffset = this.panel.ShowGroupLabels\n          ? Number(this.panel.GroupLabelFontSize.replace(\"%\", \"\")) * 0.15\n          : 0;\n\n        if (this.groupedRows != null) {\n          let gcols =\n            GroupCols <= 0 || GroupCols > this.groupedRows.length\n              ? this.groupedRows.length\n              : GroupCols;\n          let dw = (w + GroupGap) / gcols;\n\n          // Figure out the max data points in each column of groups...\n          var pointsPerCol = [];\n          for (let i = 0; i < gcols; i++) pointsPerCol.push(0);\n          for (let i = 0; i < this.groupedRows.length; i++) {\n            let cc = i % gcols;\n            let u = this.groupedRows[i].values.length;\n            if (pointsPerCol[cc] < u) pointsPerCol[cc] = u;\n          }\n\n          let totalPoints = 0;\n          for (let i = 0; i < pointsPerCol.length; i++)\n            totalPoints += pointsPerCol[i];\n\n          var colOverheadWidth =\n            this.panel.LowSideMargin + this.panel.HighSideMargin;\n          var colWidth =\n            (w - pointsPerCol.length * colOverheadWidth) / totalPoints;\n\n          let numRows = Math.ceil(this.groupedRows.length / gcols);\n          let dh = (h - ((numRows - 1) * VGroupGap)) / numRows;\n          let hh = dh;\n          for (let rr = 0; rr < numRows; rr++) {\n            let ww = 0;\n            for (let cc = 0; cc < gcols; cc++) {\n              let nn = pointsPerCol[cc];\n\n              let ii = cc + rr * gcols;\n              if (ii < this.groupedRows.length) {\n                plotGroupVertical(\n                  this.panel,\n                  this.svg,\n                  this.groupedRows[ii].values,\n                  nn,\n                  this.groupedRows[ii].key,\n                  groupNameOffset,\n                  ww,\n                  dw - GroupGap,\n                  hh - dh,\n                  dh\n                );\n                ww += dw;\n              }\n            }\n            hh += dh + VGroupGap;\n          }\n        } else {\n          plotGroupVertical(\n            this.panel,\n            this.svg,\n            this.rows,\n            this.rows.length,\n            \"\",\n            0,\n            0,\n            w,\n            0,\n            h\n          );\n        }\n      }\n\n      var pulseHigh = function (svg) {\n        var highFlashRects = svg.selectAll(\n          \"rect.michaeldmoore-multistat-panel-bar.highflash\"\n        );\n\n        if (\n          isNumber(HighLimitBarFlashTimeout) &&\n          highFlashRects._groups.length > 0 &&\n          highFlashRects._groups[0].length > 0\n        ) {\n          highFlashRects.transition().on(\"start\", function highRepeat() {\n            d3.active(this)\n              .style(\"fill\", HighLimitBarFlashColor)\n              .duration(HighLimitBarFlashTimeout)\n              .transition()\n              .style(\"fill\", HighLimitBarColor)\n              .duration(HighLimitBarFlashTimeout)\n              .transition()\n              .on(\"start\", highRepeat);\n          });\n        }\n      };\n\n      var pulseLow = function (svg) {\n        var lowFlashRects = svg.selectAll(\n          \"rect.michaeldmoore-multistat-panel-bar.lowflash\"\n        );\n        if (\n          isNumber(LowLimitBarFlashTimeout) &&\n          lowFlashRects._groups.length > 0 &&\n          lowFlashRects._groups[0].length > 0\n        ) {\n          lowFlashRects.transition().on(\"start\", function lowRepeat() {\n            d3.active(this)\n              .style(\"fill\", LowLimitBarFlashColor)\n              .duration(LowLimitBarFlashTimeout)\n              .transition()\n              .style(\"fill\", LowLimitBarColor)\n              .duration(LowLimitBarFlashTimeout)\n              .transition()\n              .on(\"start\", lowRepeat);\n          });\n        }\n      };\n\n      pulseHigh(this.svg);\n      pulseLow(this.svg);\n    }\n\n    /*\n    var drag = d3.drag()\n      .on(\"drag\", function () {\n        d3.select(this).attr(\"cx\", d3.event.x).attr(\"cy\", d3.event.y);\n      });\n\n    if (!this.panel.Legend) {\n      this.svg\n        .append(\"rect\")\n        .attr(\"x\", 10)\n        .attr(\"y\", 20)\n        .attr(\"width\", 100)\n        .attr(\"height\", 200)\n        .attr(\"fill\", \"red\")\n        .attr(\"stroke\", \"yellow\")\n        .call(this.drag);\n    }\n*/\n\n    this.ctrl.renderingCompleted();\n  }\n\n  onConfigChanged() {\n    this.refresh();\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    this.ctrl = ctrl;\n    this.elem = elem;\n\n    // for backward compatability (grafana 6.6.0 and earlier)\n    var panelContentElem = elem.find(\".panel-content\");\n    if (panelContentElem.length) this.elem = panelContentElem;\n\n    CTRL = ctrl;\n  }\n}\n\nvar CTRL;\n\nMultistatPanelCtrl.templateUrl = \"module.html\";\n\nexport { MultistatPanelCtrl as PanelCtrl };\n"]}